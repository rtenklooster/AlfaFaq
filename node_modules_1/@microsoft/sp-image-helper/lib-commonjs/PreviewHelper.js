"use strict";
/**
 * @copyright Microsoft Corporation. All rights reserved.
 *
 * @file utility functions to determine whether file type supports preview.
 * and return the preview image url based on the file url
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports._PreviewHelper = void 0;
var tslib_1 = require("tslib");
var sp_core_library_1 = require("@microsoft/sp-core-library");
var sp_diagnostics_1 = require("@microsoft/sp-diagnostics");
var SPAlternativeUrls = tslib_1.__importStar(require("@ms/odsp-utilities/lib/alternativeUrls/SPAlternativeUrls"));
var PreviewUtility_1 = require("./PreviewUtility");
var SPResourcePath_1 = require("./SPResourcePath");
var ThumbnailUrlGenerator_1 = require("./ThumbnailUrlGenerator");
var MAX_BANNERURL_LEN = 255;
/**
 * @internal
 */
// tslint:disable-next-line:class-name export-name
var _PreviewHelper = /** @class */ (function () {
    function _PreviewHelper() {
    }
    /**
     * Returns true if the filetype is supported for preview.
     */
    _PreviewHelper.hasThumbnailOrFileTypeSupportsPreview = function (fileType, thumbnail) {
        return !!thumbnail || (!!fileType && PreviewUtility_1._PreviewUtility.getPreviewSupportedMap.has(fileType.toLowerCase()));
    };
    /**
     * Returns preview image URL for supported file extensions using getPreview.aspx service
     * Must be given unencoded strings
     */
    _PreviewHelper.getPreviewImageUrl = function (fileType, thumbnail, baseUrl, path, siteId, webId, uniqueId, width, isBannerImageUrl, callerId, originalWidth, originalHeight) {
        if (!isBannerImageUrl && ThumbnailUrlGenerator_1._ThumbnailUrlGenerator.instance.isVROOMThumbnailEnabled()) {
            var qosMonitor = new sp_diagnostics_1._QosMonitor("DocVizCaller");
            qosMonitor.writeSuccess({ service: callerId || 'unknown' });
        }
        var resolution = PreviewUtility_1._PreviewUtility.normalizeWidthToResolution(width);
        return _PreviewHelper._generateGetPreviewImageUrl(fileType, baseUrl, path, siteId, webId, uniqueId, resolution, isBannerImageUrl, originalWidth, originalHeight);
    };
    _PreviewHelper._generateGetPreviewImageUrl = function (fileType, baseUrl, path, siteId, webId, uniqueId, resolution, isBannerImageUrl, originalWidth, originalHeight) {
        if (path) {
            var pathUri = new SPResourcePath_1._SPResourcePath(path);
            if (pathUri.format === SPResourcePath_1._SPResourcePathFormat.absolute) {
                // Honor cross geo Host from path
                baseUrl = pathUri.authority;
                path = pathUri.path;
            }
            // Fix for WEX Bug #1129103 and Bug #1137680. Always encode so that setSearchParam works correctly with symbols.
            // If the path has a forward slash, then it hasn't been encoded yet.
            if (path.indexOf('/') >= 0) {
                path = encodeURIComponent(path);
            }
        }
        var baseUri = baseUrl && !!baseUrl.length ? new SPResourcePath_1._SPResourcePath(baseUrl) : undefined;
        var url = baseUrl && !!baseUrl.length
            ? new SPResourcePath_1._SPResourcePath(baseUri === null || baseUri === void 0 ? void 0 : baseUri.authority, _PreviewHelper.PREVIEW_HANDLER_PATH)
            : new SPResourcePath_1._SPResourcePath(_PreviewHelper.PREVIEW_HANDLER_PATH);
        if (resolution !== undefined && !isNaN(resolution)) {
            url.searchParams.set(_PreviewHelper.RESOLUTION, resolution.toString());
        }
        // Convert to guids for brevity as final URL should be minimal to fit in 255 SP URL limit
        var siteGuid = sp_core_library_1.Guid.tryParse(siteId);
        var webGuid = sp_core_library_1.Guid.tryParse(webId);
        var fileGuid = sp_core_library_1.Guid.tryParse(uniqueId);
        var cdnEnabled = 'True' === SPAlternativeUrls.tryGetAlternativeUrl('PrivateCDNEnabled');
        var validGuidProvided = siteGuid &&
            webGuid &&
            fileGuid &&
            !PreviewUtility_1.EMPTY_GUIDS.has(uniqueId) &&
            !PreviewUtility_1.EMPTY_GUIDS.has(webId) &&
            !PreviewUtility_1.EMPTY_GUIDS.has(siteId);
        // Giving preference to path over Guid to improve CDN Rewrite coverage
        var pathOverGuid = cdnEnabled &&
            sp_core_library_1._SPFlight.isEnabled(60134 /* WEXUsePathOverGuidForBannerImageUrl */) &&
            isBannerImageUrl &&
            !!path &&
            url.toString().length + encodeURIComponent(path).length <= MAX_BANNERURL_LEN;
        var isPathUrl = false;
        if (validGuidProvided && !pathOverGuid) {
            url.searchParams.set(_PreviewHelper.GUID_SITE, siteGuid.toString().replace(/-/g, ''));
            url.searchParams.set(_PreviewHelper.GUID_WEB, webGuid.toString().replace(/-/g, ''));
            url.searchParams.set(_PreviewHelper.GUID_FILE, fileGuid.toString().replace(/-/g, ''));
        }
        else if (path) {
            url.setSearchParam(_PreviewHelper.PATH, path);
            isPathUrl = true;
        }
        else {
            // Neither valid Guid nor Path provided, return undefined instead of a failed attempt to SPO
            return undefined;
        }
        if (!isBannerImageUrl) {
            url.searchParams.set(PreviewUtility_1._PreviewUtility.CLIENT_TYPE, PreviewUtility_1._PreviewUtility.MODERN_WEB_PART);
        }
        // Path already has file type
        if (isBannerImageUrl && fileType && !isPathUrl) {
            url.searchParams.set(_PreviewHelper.EXT, fileType);
            if (url.toString().length >= MAX_BANNERURL_LEN) {
                url.searchParams.delete(_PreviewHelper.EXT);
            }
        }
        if (isBannerImageUrl && originalWidth && originalHeight) {
            url.searchParams.set(_PreviewHelper.ORIGINAL_WIDTH, originalWidth.toString());
            url.searchParams.set(_PreviewHelper.ORIGINAL_HEIGHT, originalHeight.toString());
            if (url.toString().length >= MAX_BANNERURL_LEN) {
                url.searchParams.delete(_PreviewHelper.ORIGINAL_WIDTH);
                url.searchParams.delete(_PreviewHelper.ORIGINAL_HEIGHT);
            }
        }
        return url.toString();
    };
    _PreviewHelper.RESOLUTION = 'resolution';
    _PreviewHelper.GUID_SITE = 'guidSite';
    _PreviewHelper.GUID_WEB = 'guidWeb';
    _PreviewHelper.GUID_FILE = 'guidFile';
    _PreviewHelper.PATH = 'path';
    _PreviewHelper.EXT = 'ext';
    _PreviewHelper.ORIGINAL_WIDTH = 'ow';
    _PreviewHelper.ORIGINAL_HEIGHT = 'oh';
    _PreviewHelper.WIDTH = 'width';
    _PreviewHelper.WIDTH_SHORT = 'w';
    _PreviewHelper.HEIGHT_SHORT = 'h';
    _PreviewHelper.VIEWPORT_LEFT = 'vl';
    _PreviewHelper.VIEWPORT_TOP = 'vt';
    _PreviewHelper.VIEWPORT_WIDTH = 'vw';
    _PreviewHelper.VIEWPORT_HEIGHT = 'vh';
    _PreviewHelper.CALLER_STACK = 'cs';
    _PreviewHelper.INPUT_FORMAT = 'inputFormat';
    _PreviewHelper.DOCID = 'docid';
    _PreviewHelper.PREVIEW_HANDLER_PATH = '/_layouts/15/getpreview.ashx';
    // video file extensions within the support preview file types
    _PreviewHelper.VIDEO_EXTENSIONS = [
        '3gp',
        'asf',
        'avi',
        'mod',
        'mov',
        'mp4',
        'mpeg',
        'mpg',
        'mts',
        'ts',
        'vob',
        'wmv'
    ];
    _PreviewHelper.IMAGE_EXTENSIONS = [
        'gif',
        'jpg',
        'jpeg',
        'bmp',
        'dib',
        'tif',
        'tiff',
        'ico',
        'png',
        'jxr',
        'svg'
    ];
    return _PreviewHelper;
}());
exports._PreviewHelper = _PreviewHelper;
//# sourceMappingURL=PreviewHelper.js.map