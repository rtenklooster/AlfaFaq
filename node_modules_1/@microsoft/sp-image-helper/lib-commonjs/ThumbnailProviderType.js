"use strict";
/**
 * @file ThumbnailProviderType.ts
 * @copyright Microsoft Corporation. All rights reserved.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports._ThumbnailProviderType = void 0;
/**
 * Type of the thumbnail URL service.
 *
 * @preapproved @internal
 */
var _ThumbnailProviderType;
(function (_ThumbnailProviderType) {
    /**
     * Unknown URL type, possibly full path
     */
    _ThumbnailProviderType[_ThumbnailProviderType["Unknown"] = 0] = "Unknown";
    /**
     * URL served via private Content delivery network (CDN)
     */
    _ThumbnailProviderType[_ThumbnailProviderType["PrivateCDN"] = 1] = "PrivateCDN";
    /**
     * URL served via AFD private Content delivery network (CDN)
     */
    _ThumbnailProviderType[_ThumbnailProviderType["AFDPrivateCDN"] = 2] = "AFDPrivateCDN";
    /**
     * URL path ending with /_layouts/15/getPreview.aspx, API served by DocViz service.
     * This service is under deprecation process.
     */
    _ThumbnailProviderType[_ThumbnailProviderType["DocViz"] = 3] = "DocViz";
    /**
     * Media thumbnail micro service. This is core service for generating thumbnail.
     */
    _ThumbnailProviderType[_ThumbnailProviderType["MeTA"] = 4] = "MeTA";
    /**
     * Thumbnail Url is hosted on my site.
     */
    _ThumbnailProviderType[_ThumbnailProviderType["MySite"] = 5] = "MySite";
    /**
     * Thumbnail URL is same as original full Image path.
     */
    _ThumbnailProviderType[_ThumbnailProviderType["Original"] = 6] = "Original";
    /***
     * Actual type of the thumbnail provider is not known but it is hosted on same SharePoint host.
     */
    _ThumbnailProviderType[_ThumbnailProviderType["SharePointHost"] = 7] = "SharePointHost";
    /**
     * Thumbnail URL is representing stock image, hosted as static asset.
     */
    _ThumbnailProviderType[_ThumbnailProviderType["Stock"] = 8] = "Stock";
    /**
     * VROOM thumbnail URL return response from alt stream cache if available before redirecting to MeTA.
     * This is similar to VROOMMeTA except it first leverage the cache before redirect.
     */
    _ThumbnailProviderType[_ThumbnailProviderType["VROOMMeTACache"] = 9] = "VROOMMeTACache";
    /**
     * URL served via public content delivery network (CDN)
     */
    _ThumbnailProviderType[_ThumbnailProviderType["PublicCDN"] = 10] = "PublicCDN";
    /**
     * URL external to the SharePoint including multi geo or any other hosted service managed by SharePoint
     * like CDN, Micro Services. External URLs are treated as it is as they are not handled by thumbnail services
     */
    _ThumbnailProviderType[_ThumbnailProviderType["External"] = 11] = "External";
    /**
     * Default Image served through public CDN with downscale feature.
     */
    _ThumbnailProviderType[_ThumbnailProviderType["MediaCDNDefault"] = 12] = "MediaCDNDefault";
    /**
     * HubbleStock Image Url served through public CDN with downscale feature.
     */
    _ThumbnailProviderType[_ThumbnailProviderType["MediaCDNHubble"] = 13] = "MediaCDNHubble";
    /**
     * Stock images hosted directly by cdn.hubblecontent.osi.office.net
     * e.g. https://cdn.hubblecontent.osi.office.net/m365content/publish/041428cd-95d3-4cee-a3d0-bf21455c9b3f/503586914.jpg
     */
    _ThumbnailProviderType[_ThumbnailProviderType["HubbleStock"] = 14] = "HubbleStock";
    /**
     * Large Thumbnail version of Stock images hosted directly by cdn.hubblecontent.osi.office.net
     * Such URL are saved as BannerImageUrl so they are naturally small in size without rewrite treatment for various
     * search scenarios outside WEX.
     * e.g. https://cdn.hubblecontent.osi.office.net/m365content/publish/01443b10-5551-4c18-8b4f-2c5f969d8ec6/thumbnails/large.jpg?file=gettyimages-543374530.jpg
     * This is generated from Original URL https://cdn.hubblecontent.osi.office.net/m365content/publish/01443b10-5551-4c18-8b4f-2c5f969d8ec6/gettyimages-543374530.jpg
     * thumbnails/large.jpg is fixed path which can be used to replace to get smaller size of thumbnail from Hubble stock.
     * Other sizes are small medium and xlarge where xlarge is not guaranteed to be generated always. Note that file type .jpg vary depending upon original file name
     * ?file= query param is saved along with BannerImageUrl to remember so original file URL can be reconstructed when required.
     *
     * See HubbleStock
     */
    _ThumbnailProviderType[_ThumbnailProviderType["HubbleStockThumbnail"] = 15] = "HubbleStockThumbnail";
    /**
     * SPO Layouts image e.g. https://contoso.sharepoint.com/_layouts/15/images/sitepagethumbnail.png
     */
    _ThumbnailProviderType[_ThumbnailProviderType["SPOLayoutsImage"] = 16] = "SPOLayoutsImage";
    /**
     * SPO layouts image served through Media CDN e.g. https://media.akamai.odsp.cdn.office.net/microsoft.sharepoint.com/_layouts/15/images/sitepagethumbnail.png
     */
    _ThumbnailProviderType[_ThumbnailProviderType["MediaCDNLayoutsImage"] = 17] = "MediaCDNLayoutsImage";
    /**
     * SPO layouts image served through Media CDN but downscaled through MeTA e.g. https://media.akamai.odsp.cdn.office.net/northcentralus1-mediab.svc.ms/transform/thumbnail?provider=url&inputFormat=jpg&docid=https%3A%2F%2Fmedia.akamai.odsp.cdn.office.net%2Fmicrosoft.sharepoint.com%2F_layouts%2F15%2Fimages%2Fvisualtemplateimagetile.jpg&w=200
     */
    _ThumbnailProviderType[_ThumbnailProviderType["MediaCDNOptimalLayoutsImage"] = 18] = "MediaCDNOptimalLayoutsImage";
})(_ThumbnailProviderType = exports._ThumbnailProviderType || (exports._ThumbnailProviderType = {}));
//# sourceMappingURL=ThumbnailProviderType.js.map