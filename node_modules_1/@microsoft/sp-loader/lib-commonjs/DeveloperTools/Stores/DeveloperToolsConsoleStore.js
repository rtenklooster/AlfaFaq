"use strict";
/**
 * @file DeveloperToolsConsoleStore.ts
 * @Copyright (c) Microsoft Corporation.  All rights reserved.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.DeveloperToolsConsoleStore = void 0;
var tslib_1 = require("tslib");
var BaseStore_1 = tslib_1.__importDefault(require("./BaseStore"));
var ManifestManager_1 = tslib_1.__importDefault(require("./../Components/DeveloperModules/ManifestManager/ManifestManager"));
var PerformanceDisplay_1 = tslib_1.__importDefault(require("./../Components/DeveloperModules/PerformanceDisplay/PerformanceDisplay"));
var TraceDisplay_1 = tslib_1.__importDefault(require("./../Components/DeveloperModules/TraceDisplay/TraceDisplay"));
var DeveloperToolsTab_1 = tslib_1.__importDefault(require("./../Models/DeveloperToolsTab"));
var manifestManagerStrings = tslib_1.__importStar(require("./../Components/DeveloperModules/ManifestManager/ManifestManager.resx"));
var perfDisplayStrings = tslib_1.__importStar(require("./../Components/DeveloperModules/PerformanceDisplay/PerformanceDisplay.resx"));
var traceDisplayStrings = tslib_1.__importStar(require("./../Components/DeveloperModules/TraceDisplay/TraceDisplay.resx"));
var DEFAULT_HEIGHT = 1 / 4;
var MIN_HEIGHT = 1 / 6;
var MAX_HEIGHT = 3 / 4;
var DeveloperToolsConsoleStore = /** @class */ (function (_super) {
    tslib_1.__extends(DeveloperToolsConsoleStore, _super);
    function DeveloperToolsConsoleStore() {
        var _this = _super.call(this) || this;
        _this._height = DEFAULT_HEIGHT;
        _this._visible = false;
        _this._selectedTabId = 0;
        _this._tabs = [
            new DeveloperToolsTab_1.default({
                title: traceDisplayStrings.TabTitle,
                iconName: 'ShowResults',
                component: TraceDisplay_1.default
            }),
            new DeveloperToolsTab_1.default({
                title: perfDisplayStrings.TabTitle,
                iconName: 'SpeedHigh',
                component: PerformanceDisplay_1.default
            }),
            new DeveloperToolsTab_1.default({
                title: manifestManagerStrings.tabTitle,
                iconName: 'Script',
                component: ManifestManager_1.default
            })
        ];
        return _this;
    }
    Object.defineProperty(DeveloperToolsConsoleStore, "instance", {
        get: function () {
            if (!this._instance) {
                this._instance = new DeveloperToolsConsoleStore();
            }
            return this._instance;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DeveloperToolsConsoleStore.prototype, "height", {
        get: function () {
            return this._height;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DeveloperToolsConsoleStore.prototype, "visible", {
        get: function () {
            return this._visible;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DeveloperToolsConsoleStore.prototype, "selectedTabId", {
        get: function () {
            return this._selectedTabId;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DeveloperToolsConsoleStore.prototype, "tabs", {
        get: function () {
            return this._tabs;
        },
        enumerable: false,
        configurable: true
    });
    DeveloperToolsConsoleStore.prototype.resizeConsole = function (height) {
        var newHeight = this._height;
        if (height >= MAX_HEIGHT) {
            newHeight = MAX_HEIGHT;
        }
        else if (height <= MIN_HEIGHT) {
            newHeight = MIN_HEIGHT;
        }
        else {
            newHeight = height;
        }
        if (newHeight !== this._height) {
            this._height = newHeight;
            this.emitChange();
        }
    };
    DeveloperToolsConsoleStore.prototype.showHideConsole = function (show) {
        if (this._visible !== show) {
            this._visible = show;
            this.emitChange();
        }
    };
    DeveloperToolsConsoleStore.prototype.registerTab = function (tab) {
        this._tabs.push(tab);
        if (this._tabs.length === 1) {
            this._selectedTabId = 0;
        }
        this.emitChange();
    };
    return DeveloperToolsConsoleStore;
}(BaseStore_1.default));
exports.DeveloperToolsConsoleStore = DeveloperToolsConsoleStore;
// instantiate the store so it can start listening to dispatch events
exports.default = DeveloperToolsConsoleStore.instance; // tslint:disable-line:export-name
//# sourceMappingURL=DeveloperToolsConsoleStore.js.map