"use strict";
// tslint:disable:export-name
Object.defineProperty(exports, "__esModule", { value: true });
exports.overrideXMLHttpRequestKSActivated = exports.notUseFirstPartyIsolatedAppIdOnSecurebrokerDomain = exports.traceRequireLoaderErrorKSActivated = exports.isVersionMismatchThrowKSActivated = exports.isVersionHeaderKillSwitchActivated = exports.isRejectOnNotFoundManifestsKillSwitchActivated = void 0;
var sp_core_library_1 = require("@microsoft/sp-core-library");
// THIS KILLSWITCH HAS BEEN PULLED!!!
function isRejectOnNotFoundManifestsKillSwitchActivated() {
    return sp_core_library_1._SPKillSwitch.isActivated('40391ecf-2963-4b4d-b6cf-a08365509a80'
    /* '12/18/20', 'Reject the manifest fetch if we don't return an actual manifest' */
    );
}
exports.isRejectOnNotFoundManifestsKillSwitchActivated = isRejectOnNotFoundManifestsKillSwitchActivated;
function isVersionHeaderKillSwitchActivated() {
    return sp_core_library_1._SPKillSwitch.isActivated('996534b3-7540-4ff2-8864-1a20fce3eba7'
    /* '3/2/22', 'Send odsp-web version to service worker' */
    );
}
exports.isVersionHeaderKillSwitchActivated = isVersionHeaderKillSwitchActivated;
function isVersionMismatchThrowKSActivated() {
    return sp_core_library_1._SPKillSwitch.isActivated('676ca369-31fe-4888-bad3-5ecfc6d828cd' /* '3/9/22', 'Throw when requesting a higher version than a pinned manifest' */);
}
exports.isVersionMismatchThrowKSActivated = isVersionMismatchThrowKSActivated;
function traceRequireLoaderErrorKSActivated() {
    return sp_core_library_1._SPKillSwitch.isActivated('b36bb138-515a-420a-9d65-e09d90cc855f' /* '6/15/22', 'trace loader errors to the console for easier debugging.' */);
}
exports.traceRequireLoaderErrorKSActivated = traceRequireLoaderErrorKSActivated;
function notUseFirstPartyIsolatedAppIdOnSecurebrokerDomain() {
    return sp_core_library_1._SPKillSwitch.isActivated('5910ea14-bd58-4817-90dd-933e0274fe1d' /* '5/8/22', 'Use securebroker app id on securebroker domain' */);
}
exports.notUseFirstPartyIsolatedAppIdOnSecurebrokerDomain = notUseFirstPartyIsolatedAppIdOnSecurebrokerDomain;
function overrideXMLHttpRequestKSActivated() {
    return sp_core_library_1._SPKillSwitch.isActivated('d51a8be3-8ec5-4e35-ada6-cceca79c52f8' /* '8/25/22', 'Override XMLHttpRequest to disable adding traceparent property.' */);
}
exports.overrideXMLHttpRequestKSActivated = overrideXMLHttpRequestKSActivated;
//# sourceMappingURL=killSwitches.js.map