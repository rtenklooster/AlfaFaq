@import '../styles/themedFabric.Common.module.scss';
@import '../styles/Consts.module.scss';
@import '../styles/_focusBorder.module.scss';
.propertyPaneGroupHeader {
  // This is split into three different parts because the mixin
  // ms-border-left is not respecting color for theming.
  // todo (VSo# 386060)
  background: transparent;
  border-color: $ms-color-neutralLight transparent transparent transparent;
  border-style: solid;
  border-width: $propertyPane-border-width;
  border-radius: 0;
  cursor: pointer;
  display: flex;
  line-height: $propertyPane-groupHeader-height;
  height: $propertyPane-groupHeader-height;
  width: 100%;
  padding: 0 20px;

  &:last-of-type:not(:focus) {
    border-bottom-color: $ms-color-neutralLight;
    border-bottom-style: solid;
    border-bottom-width: $propertyPane-border-width;

    &.propertyPaneGroupExpanded {
      border-bottom: transparent;
      border-bottom-style: solid;
      border-bottom-width: $propertyPane-border-width;
    }
  }

  &:focus {
    // delete below once KS (eb0e4532-4690-471d-b63e-895bac23117a) is graduated
    outline: none;
    border-width: $propertyPane-border-width;
    border-color: $ms-color-neutralSecondary;
    border-style: solid;
    // delete above once KS (eb0e4532-4690-471d-b63e-895bac23117a) is graduated

    & + .propertyPaneGroupHeader {
      border-top: transparent;
      border-top-style: solid;
      border-top-width: $propertyPane-border-width;
    }
  }

  &:hover {
    background: $ms-color-neutralLighter;
  }
}

.highContrastFocusState {
  // move rule to .propertyPaneGroupHeader once KS (eb0e4532-4690-471d-b63e-895bac23117a) is graduated
  &:focus {
    outline: inherit;
    border: inherit;
    border-color: inherit;
    border-style: inherit;
    @include focus-border(1px, $ms-color-neutralSecondary, 2px, false);
  }
}

// Add a border to the bottom of the last header
.propertyPaneGroup:last-child .propertyPaneGroupHeader {
  border-bottom-color: $ms-color-neutralLighter;
  border-bottom-style: solid;
  border-bottom-width: $propertyPane-border-width;
}

// The group is expanded/opened
.propertyPaneGroupExpanded {
  border-bottom: transparent;
  border-bottom-style: solid;
  border-bottom-width: $propertyPane-border-width;
}

.propertyPaneGroupHeaderText {
  flex: 1;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.propertyPaneGroupHeaderIcon {
  @include ms-float(right);
  color: $ms-color-neutralSecondary;
  font-size: 14px;
  line-height: $propertyPane-groupHeader-height - 2px; // minus the border
  position: relative;
}

.propertyPaneGroupHeaderNoAccordion {
  height: 40px;
  line-height: 40px;
  padding-top: 4px;
  @include ms-padding-right(0);
  @include ms-padding-left(20px);
  width: 300px;
  text-overflow: ellipsis;
  overflow: hidden;
}

.propertyPaneGroupHeaderNoAccordion,
.propertyPaneGroupHeader {
  font-size: 16px;
  @include ms-fontWeight-regular;
  @include ms-text-align(left);
  color: $ms-color-neutralPrimary;
}

.propertyPaneGroupContent {
  padding: 0 20px 24px 20px;
}

// Styling for group items
.propertyPaneGroupContent {
  // Headers
  h2 {
    font-size: $ms-font-size-m-plus;
    color: $ms-color-neutralPrimary;
    font-weight: $ms-font-weight-semibold;
    font-weight: normal;
  }
}

.propertyPaneChoiceGroupNew :global {
  .ms-Label {
    width: 100%;
    box-sizing: border-box;
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  .ms-ChoiceField--image,
  .ms-ChoiceField--icon {
    height: initial;
    width: calc(33.33% - 4px); // to account for 4px margin while making it responsive in case of a scroll bar
    .ms-ChoiceField-field {
      min-width: 100%; // to account for possible scroll bar on the page itself
      justify-content: unset; // Line up image/icon and text across entire row of choices
    }
    .ms-ChoiceField-labelWrapper {
      max-width: 92px; // To allow more space for the text. The parent container is 92px wide
      margin-bottom: 8px;
    }
  }
  .ms-ChoiceField-wrapper {
    width: 100%;
    height: 100%;
  }
  .themeableSvgPath {
    fill: $ms-color-neutralPrimary;
  }
  @media screen and (-ms-high-contrast: active), (forced-colors: active) {
    .themeableSvgPath {
      fill: ButtonText;
    }
  }
  .themeableSvgStroke {
    stroke: $ms-color-neutralPrimary;
  }
  @media screen and (-ms-high-contrast: active), (forced-colors: active) {
    .themeableSvgStroke {
      stroke: ButtonText;
    }
  }
  .ms-ChoiceFieldGroup-flexContainer {
    width: 100%; // Need to set width to 100% since the container is display: flex.
  }
}

// ChoiceField--image and ChoiceField--icon style fixes until we have them in Fabric
.propertyPaneChoiceGroup :global {
  .ms-Label {
    width: 100%;
    box-sizing: border-box;
  }
  .ms-ChoiceField--image,
  .ms-ChoiceField--icon {
    height: initial;
    width: calc(33.33% - 4px); // to account for 4px margin while making it responsive in case of a scroll bar
    .ms-ChoiceField-field {
      min-width: 100%; // to account for possible scroll bar on the page itself
    }
    .ms-ChoiceField-innerField {
      align-items: center;
      display: flex;
      height: 52px;
      justify-content: center;
    }
    .ms-ChoiceField-labelWrapper {
      margin-bottom: 8px;
    }
  }
  .ms-ChoiceField-wrapper {
    width: 100%;
  }
  .themeableSvgPath {
    fill: $ms-color-neutralPrimary;
  }
  .ms-ChoiceFieldGroup-flexContainer {
    width: 100%; // Need to set width to 100% since the container is display: flex.
  }
}

// .ms-ChoiceField--title style fixes until we have them in Fabric
.propertyPaneChoiceGroup :global .ms-ChoiceField--title {
  .ms-Label {
    color: $ms-color-neutralPrimary;
  }
}

// Fix misalignment of property pane choice groups mixing icons and SVG
.choiceGroupContainsIconOrImage :global .ms-ChoiceFieldGroup {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
}

.propertyPaneGroupField {
  padding-top: 4px;
  color: $ms-color-neutralPrimary;
  word-wrap: break-word;
  :global a.ms-Link {
    font-size: $ms-font-size-m;
    margin-bottom: 16px;
  }
  :global button.ms-Checkbox {
    max-width: 100%;
  }
  :global button.ms-Toggle-background {
    // This is to override classic page min-width value.
    // Due to the classic page min-width for button, toggle button is too wide.
    min-width: 0;
  }
  :global .contrastRatio-overwrite .ms-TextField-fieldGroup {
    // To overwrite default tertiary color which does not meet the 3:1 contrast ratio.
    border-color: $ms-color-neutralSecondary;
    &:hover {
      border-color: $ms-color-neutralSecondaryAlt;
    }
  }
}

.labelWithTooltipButton {
  display: flex;
  flex-wrap: wrap;
}

@media screen and (-ms-high-contrast: active) {
  .propertyPaneGroupField :global a.ms-Link:hover {
    text-decoration: underline;
  }
}

// black-on-white is already valid from Fabric
// For white-on-black, Fabric isn't following Windows colors,
// so overriding as per accessibility spec.
@media screen and (-ms-high-contrast: white-on-black) {
  .propertyPaneGroupField :global a.ms-Link {
    color: #ffff00;
  }
}
