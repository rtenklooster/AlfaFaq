"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getThumbnailPickerButtons = void 0;
var tslib_1 = require("tslib");
var React = tslib_1.__importStar(require("react"));
var office_ui_fabric_react_bundle_1 = require("@ms/office-ui-fabric-react-bundle");
var strings = tslib_1.__importStar(require("./PropertyPaneThumbnailStrings.resx"));
var KillSwitches_1 = require("../common/KillSwitches");
function getThumbnailPickerButtons(handleChangeImageClick, onItemDeleted, buttonClassName, automationIdPrefix) {
    var changeButtonProps = {
        className: buttonClassName,
        onClick: handleChangeImageClick,
        ariaLabel: strings.PropertyPaneChangeImageButtonAriaLabel,
        ariaDescription: strings.PropertyPaneChangeImageButtonDescription,
        'data-automation-id': automationIdPrefix
            ? "".concat(automationIdPrefix, "ChangeButton")
            : 'thumbnailImagePickerChangeButton'
    };
    var changeButton = !(0, KillSwitches_1.isImageDeleteButtonKSActive)() ? (React.createElement(office_ui_fabric_react_bundle_1.ActionButton, tslib_1.__assign({}, tslib_1.__assign(tslib_1.__assign({}, changeButtonProps), { iconProps: {
            iconName: 'Edit'
        } })), strings.PropertyPaneChangeButtonLabel)) : (React.createElement(office_ui_fabric_react_bundle_1.PrimaryButton, tslib_1.__assign({}, changeButtonProps), strings.PropertyPaneChangeButtonLabel));
    var deleteButton = !(0, KillSwitches_1.isImageDeleteButtonKSActive)() && onItemDeleted ? (React.createElement(office_ui_fabric_react_bundle_1.ActionButton, { iconProps: { iconName: 'Delete' }, className: buttonClassName, onClick: onItemDeleted, ariaLabel: strings.PropertyPaneDeleteImageButtonAriaLabel, ariaDescription: strings.PropertyPaneDeleteImageButtonDescription, "data-automation-id": automationIdPrefix ? "".concat(automationIdPrefix, "DeleteButton") : 'thumbnailImagePickerDeleteButton' }, strings.PropertyPaneDeleteButtonLabel)) : undefined;
    if (deleteButton) {
        return (React.createElement(office_ui_fabric_react_bundle_1.Stack, { tokens: { childrenGap: 40 }, horizontal: true },
            changeButton,
            " ",
            deleteButton));
    }
    return changeButton;
}
exports.getThumbnailPickerButtons = getThumbnailPickerButtons;
//# sourceMappingURL=ThumbnailPickerUtils.js.map