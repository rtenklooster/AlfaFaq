"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BrowserUtilities = exports.BROKER_IN_USE_KEY = void 0;
var tslib_1 = require("tslib");
var SPKillSwitch_1 = tslib_1.__importDefault(require("./SPKillSwitch"));
var SPFlight_1 = tslib_1.__importDefault(require("./SPFlight"));
var _sharePointDesktopString = 'SharePointDesktop';
var _serviceWorkerProperty = 'serviceWorker';
var _navigationPreloadProperty = 'navigationPreload';
var _teamsBrowserWindowName = 'embedded-page-container';
var _teamsClientWindowName = 'extension-tab-frame';
var _vivaConnections1PAppId = 'sharepointportal_d2c6f111-ffad-42a0-b65e-ee00425598aa';
var _classHomeAppId = 'ClassHomePage_81fe9dd3-8207-4480-b846-cf1a967af129';
var _teamsAppEntityId = 'TeamsAppEntityId';
/**
 * @internal
 */
exports.BROKER_IN_USE_KEY = 'useSecureBroker';
/**
 * BrowserUtilities contains common utilities for browser related operations.
 * @internal
 */
var BrowserUtilities = /** @class */ (function () {
    function BrowserUtilities() {
    }
    BrowserUtilities.isWebViewHosted = function () {
        if (BrowserUtilities._isWebViewHosted === undefined) {
            BrowserUtilities._isWebViewHosted =
                BrowserUtilities.isMobileWebView() ||
                    BrowserUtilities.isTeamsWebViewHosted() ||
                    BrowserUtilities.isTeamsAndroidHosted() ||
                    BrowserUtilities.isTeamsIOSHosted() ||
                    BrowserUtilities.isOutlookWebViewHosted() ||
                    /[?&]env=WebView/.test(location.search);
        }
        return BrowserUtilities._isWebViewHosted;
    };
    BrowserUtilities.getTeamsAppType = function () {
        var appHostType;
        if (BrowserUtilities.isMEEBridgeApplicationHosted()) {
            appHostType = 'MEEBridge'; // VivaConnections Mobile
        }
        else if (BrowserUtilities.isEduClassHosted()) {
            appHostType = 'ClassHome'; // EDU
        }
        else if (BrowserUtilities.isViva1PHosted()) {
            appHostType = 'Viva1P'; // VivaConnections
        }
        else if (BrowserUtilities.isInTeamsChannelApp()) {
            appHostType = 'Channel'; // Sharepoint tab in Teams
        }
        else if (BrowserUtilities.isInPortalsApp()) {
            appHostType = 'Portals'; // LOB
        }
        else if (BrowserUtilities.isTeamsHosted()) {
            appHostType = 'Custom'; // Custom
        }
        if (BrowserUtilities.isTeamsHosted()) {
            var teamsHostType = BrowserUtilities.isTeamsBrowserHosted() ? 'TeamsWeb' : 'TeamsNative';
            var isSB = !SPKillSwitch_1.default.isActivated('b5f32a9e-4c34-49bd-9778-85c9d04afe4a'
            /* '09/20/2022', 'prchando - Add Custom appHostType for Secure Broker traffic' */
            ) && this.isUsingSecureBroker();
            return appHostType ? "".concat(appHostType).concat(isSB ? '_SB_' : '_').concat(teamsHostType) : teamsHostType;
        }
        return appHostType;
    };
    /**
     * Returns true if current page is loaded as iFrame under secure broker app
     * App is responsible for calling setUsingSecureBroker() before isUsingSecureBroker if value is true.
     * @returns
     */
    BrowserUtilities.isUsingSecureBroker = function () {
        var _a;
        try {
            return (BrowserUtilities.isTeamsBrowserOrDesktop() &&
                (!!new URL(window.location.href).searchParams.get(exports.BROKER_IN_USE_KEY) ||
                    !!((_a = window.sessionStorage) === null || _a === void 0 ? void 0 : _a.getItem(exports.BROKER_IN_USE_KEY))));
        }
        catch (_b) {
            // no-op, we want to default to not using secure broker
            // (window.location.href is not a valid URL would hit here).
            return false;
        }
    };
    /**
     * Set flags in session storage indicating current page is loaded as iFrame under secure broker app.
     * It is callers responsibility to ensure it is indeed loaded using secure broker app.
     * Also see isUsingSecureBroker()
     */
    BrowserUtilities.setUsingSecureBroker = function () {
        if (window.sessionStorage) {
            try {
                window.sessionStorage.setItem(exports.BROKER_IN_USE_KEY, 'true');
            }
            catch (_a) {
                // We don't want to fail here.  It can prevent link navigation from working
            }
        }
    };
    BrowserUtilities.isInTeamsChannelApp = function () {
        var _a, _b;
        // cross project KS
        if (!SPKillSwitch_1.default.isActivated('2badfa2e-6e1a-489b-97d9-a1f1f192a25c'
        /* '09/19/2022', 'Fix utility methods in teams' */
        )) {
            return BrowserUtilities.isTeamsHosted() && (localStorage === null || localStorage === void 0 ? void 0 : localStorage.getItem(_teamsAppEntityId))
                ? ((_a = localStorage === null || localStorage === void 0 ? void 0 : localStorage.getItem(_teamsAppEntityId)) === null || _a === void 0 ? void 0 : _a.indexOf('sharepointtab_')) !== -1
                : false;
        }
        return (BrowserUtilities.isTeamsHosted() &&
            ((_b = localStorage === null || localStorage === void 0 ? void 0 : localStorage.getItem(_teamsAppEntityId)) === null || _b === void 0 ? void 0 : _b.indexOf('sharepointtab_')) !== -1);
    };
    BrowserUtilities.isViva1PHosted = function () {
        if (!SPKillSwitch_1.default.isActivated('2badfa2e-6e1a-489b-97d9-a1f1f192a25c'
        /* '09/19/2022', 'Fix utility methods in teams' */
        )) {
            try {
                return (BrowserUtilities.isTeamsHosted() &&
                    (localStorage === null || localStorage === void 0 ? void 0 : localStorage.getItem(_teamsAppEntityId)) === _vivaConnections1PAppId);
            }
            catch (_a) {
                return false;
            }
        }
        try {
            if (BrowserUtilities._isViva1PHosted === undefined) {
                BrowserUtilities._isViva1PHosted =
                    BrowserUtilities.isTeamsHosted() &&
                        (localStorage === null || localStorage === void 0 ? void 0 : localStorage.getItem(_teamsAppEntityId)) === _vivaConnections1PAppId;
            }
        }
        catch (_b) {
            return false;
        }
        return BrowserUtilities._isViva1PHosted;
    };
    BrowserUtilities.isEduClassHosted = function () {
        if (!SPKillSwitch_1.default.isActivated('2badfa2e-6e1a-489b-97d9-a1f1f192a25c'
        /* '09/19/2022', 'Fix utility methods in teams' */
        )) {
            try {
                return (BrowserUtilities.isTeamsHosted() && (localStorage === null || localStorage === void 0 ? void 0 : localStorage.getItem(_teamsAppEntityId)) === _classHomeAppId);
            }
            catch (_a) {
                return false;
            }
        }
        try {
            if (BrowserUtilities._isClassHomeHosted === undefined) {
                BrowserUtilities._isClassHomeHosted =
                    BrowserUtilities.isTeamsHosted() && (localStorage === null || localStorage === void 0 ? void 0 : localStorage.getItem(_teamsAppEntityId)) === _classHomeAppId;
            }
        }
        catch (_b) {
            return false;
        }
        return BrowserUtilities._isClassHomeHosted;
    };
    BrowserUtilities.isTeamsAndroidHosted = function () {
        if (BrowserUtilities._isTeamsAndroid === undefined) {
            var ua = navigator.userAgent;
            BrowserUtilities._isTeamsAndroid =
                /* Android WebView (scoped to Microsoft Teams for now) */
                /*
                Mozilla/5.0 (Linux; Android 9; Mi A1 Build/PKQ1.180917.001; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/81.0.4044.117 Mobile Safari/537.36 TeamsMobile-Android
                Mozilla/5.0 (Linux; Android 9; Mi A1 Build/PKQ1.180917.001; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/81.0.4044.117 Mobile Safari/537.36 TeamsMobile-Android-dev
                */
                /.* TeamsMobile-Android.*/.test(ua) || /[?&]env=TeamsWebView/.test(location.search);
        }
        return BrowserUtilities._isTeamsAndroid;
    };
    BrowserUtilities.isTeamsIOSHosted = function () {
        if (BrowserUtilities._isTeamsIOS === undefined) {
            var ua = navigator.userAgent;
            BrowserUtilities._isTeamsIOS =
                /* Electron WebView (scoped to Microsoft Teams for now) */
                /*
                Mozilla/5.0 (iPhone; CPU iPhone OS 12_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148 TeamsMobile-iOS
                Mozilla/5.0 (iPhone; CPU iPhone OS 12_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148 TeamsMobile-iOS-dev
                */
                /.* TeamsMobile-iOS.*/.test(ua) || /[?&]env=TeamsWebView/.test(location.search);
        }
        return BrowserUtilities._isTeamsIOS;
    };
    BrowserUtilities.isTeamsWebViewHosted = function () {
        if (BrowserUtilities._isTeamsWebView === undefined) {
            var ua = navigator.userAgent;
            BrowserUtilities._isTeamsWebView =
                /* Electron WebView (scoped to Microsoft Teams for now) - Desktop Client scenario */
                /Teams\/((?:(\d+)\.)?(?:(\d+)\.)?(?:(\d+)\.\d+)).* Electron\/((?:(\d+)\.)?(?:(\d+)\.)?(?:(\d+)\.\d+))/.test(ua) || /[?&]env=TeamsWebView/.test(location.search);
        }
        return BrowserUtilities._isTeamsWebView;
    };
    BrowserUtilities.isTeams1PVivaDesktopHosted = function () {
        if (!SPKillSwitch_1.default.isActivated('2badfa2e-6e1a-489b-97d9-a1f1f192a25c'
        /* '09/19/2022', 'Fix utility methods in teams' */
        )) {
            return (BrowserUtilities.isTeamsWebViewHosted() &&
                localStorage.getItem(_teamsAppEntityId) === _vivaConnections1PAppId);
        }
        if (BrowserUtilities._isTeams1PVivaDesktop === undefined) {
            BrowserUtilities._isTeams1PVivaDesktop =
                BrowserUtilities.isTeamsWebViewHosted() &&
                    localStorage.getItem(_teamsAppEntityId) === _vivaConnections1PAppId;
        }
        return BrowserUtilities._isTeams1PVivaDesktop;
    };
    /**
     * When SharePoint is hosted in Teams, it can either be in :
     *    1. Teams Desktop Client: Electron Webview
     *    2. Teams in Browser: Iframe
     *
     * Desktop Client is identifiable via the user-agent.
     * However, for Teams in Browser, since we cannot leverage user-agent,
     * we'll be using window.name property to get the host iframe's name,
     * which when equal to "embedded-page-container" lets us know that
     * SharePoint is currently running in Teams in Browser.
     */
    BrowserUtilities.isTeamsBrowserHosted = function () {
        if (BrowserUtilities._isTeamsBrowser === undefined) {
            BrowserUtilities._isTeamsBrowser = false;
            try {
                BrowserUtilities._isTeamsBrowser = window.name === _teamsBrowserWindowName;
            }
            catch (e) {
                /* no-op */
            }
        }
        return BrowserUtilities._isTeamsBrowser;
    };
    BrowserUtilities.isTeamsBrowserOrDesktop = function () {
        return BrowserUtilities.isTeamsWebViewHosted() || BrowserUtilities.isTeamsBrowserHosted();
    };
    /**
     * Returns true, if SharePoint is hosted in Viva Mobile L2 View (browser).
     * If SharePoint is hosted in bridge webview, returns false.
     * If required please add different API for bridge by checking 'VivaBridge' string.
     *
     * In Viva, application name is appended to default RN WebView user agent -
     * application name for L2 View WebView - 'Viva Connections for Mobile (MEE App)'
     * application name for bridge WebView  - 'Viva Connections for Mobile (MEE App) VivaBridge'
     */
    BrowserUtilities.isTeamsVivaMobile = function () {
        if (BrowserUtilities._isTeamsVivaMobile === undefined) {
            BrowserUtilities._isTeamsVivaMobile = false;
            try {
                var ua = navigator.userAgent;
                BrowserUtilities._isTeamsVivaMobile =
                    (/.* Viva Connections for Mobile.*/.test(ua) && ua.indexOf('VivaBridge') === -1) ||
                        /[?&]env=VivaMobile/.test(location.search);
            }
            catch (_) {
                /* no-op */
            }
        }
        return BrowserUtilities._isTeamsVivaMobile;
    };
    BrowserUtilities.isInPortalsApp = function () {
        var queryParameters = new URL(window.location.href).searchParams;
        return ((BrowserUtilities.isTeamsHosted() && queryParameters.get('app') === 'portals') ||
            BrowserUtilities.isViva1PHosted());
    };
    /**
     * Returns true, if Mobile bridge is hosted in mobile Teams browser.
     */
    BrowserUtilities.isMEEBridgeApplicationHosted = function () {
        if (BrowserUtilities._isMEEBridgeApplicationHosted === undefined) {
            BrowserUtilities._isMEEBridgeApplicationHosted = false;
            try {
                BrowserUtilities._isMEEBridgeApplicationHosted =
                    /.* Viva Connections for Mobile.*/.test(navigator.userAgent) &&
                        navigator.userAgent.indexOf('VivaBridge') !== -1;
            }
            catch (e) {
                /* no-op */
            }
        }
        return BrowserUtilities._isMEEBridgeApplicationHosted;
    };
    /**
     * Return true, if SharePoint is hosted in Teams, either Webview or Browser
     */
    BrowserUtilities.isTeamsHosted = function () {
        var isFixCommandBarShowingUpInTeams = SPKillSwitch_1.default.isActivated('2f0ced0e-6dcc-4a09-8178-1e6abca476c8'
        /* '09/02/2022', 'Fix command bar not showing up in teams' */
        );
        var isWindowNativeInterface = Boolean(!isFixCommandBarShowingUpInTeams && window.parent === window.self && window.nativeInterface);
        return (isWindowNativeInterface ||
            BrowserUtilities.isTeamsWebViewHosted() ||
            BrowserUtilities.isTeamsBrowserHosted() ||
            BrowserUtilities.isTeamsAndroidHosted() ||
            BrowserUtilities.isTeamsIOSHosted());
    };
    BrowserUtilities.isiOSWebView = function () {
        return /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/.test(navigator.userAgent);
    };
    BrowserUtilities.isSharePointiOSApp = function () {
        if (BrowserUtilities._isSharePointiOSApp === undefined) {
            var userAgent = navigator.userAgent;
            BrowserUtilities._isSharePointiOSApp =
                BrowserUtilities.isiOSWebView() || BrowserUtilities._isTestMobileWebView();
            if (this._isMobileIntuneBrowser(userAgent)) {
                BrowserUtilities._isSharePointiOSApp = false;
            }
        }
        return BrowserUtilities._isSharePointiOSApp;
    };
    BrowserUtilities.isMobileWebView = function () {
        if (BrowserUtilities._isMobileWebView === undefined) {
            var ua = navigator.userAgent;
            BrowserUtilities._isMobileWebView =
                /* iOS WebView */
                this.isSharePointiOSApp() ||
                    /* Android WebView (Lollipop+older) */
                    /(Android ).*; wv/.test(ua) ||
                    /(Android ).* Version\/((?:(\d+)\.)?(?:(\d+)\.)?(?:(\d+)\.\d+))/.test(ua) ||
                    /* Windows WebView (C# and JavaScript-based apps) */
                    (navigator.userAgent.indexOf(_sharePointDesktopString) === -1 &&
                        (/(Windows ).*; WebView\/((?:(\d+)\.)?(?:(\d+)\.)?(?:(\d+)\.\d+))/.test(ua) ||
                            /(Windows ).*; MSAppHost\/((?:(\d+)\.)?(?:(\d+)\.)?(?:(\d+)\.\d+))/.test(ua))) ||
                    BrowserUtilities._isTestMobileWebView();
            if (this._isMobileIntuneBrowser(navigator.userAgent)) {
                BrowserUtilities._isMobileWebView = false;
            }
        }
        return BrowserUtilities._isMobileWebView;
    };
    BrowserUtilities.isMobileBrowser = function () {
        if (BrowserUtilities._isMobileBrowser === undefined) {
            //
            // NOTE:
            // Currently matching hosted Android WebKit, iPhone/iPod Mobile Safari and IE Mobile.
            // May be extended to cover other mobile browsers as necessary. Not a perfect science.
            //
            BrowserUtilities._isMobileBrowser =
                BrowserUtilities.isMobileWebView() ||
                    /[?&]env=WebView/.test(location.search) ||
                    /(Android|iPhone|iPod|IEMobile|BlackBerry)/.test(navigator.userAgent) ||
                    /[?&]env=Mobile/.test(location.search);
        }
        return BrowserUtilities._isMobileBrowser;
    };
    BrowserUtilities.isEmbedded = function () {
        if (BrowserUtilities._isEmbedded === undefined) {
            if (BrowserUtilities.isWebViewHosted() || /[?&]PageVersion=[^&]/.test(location.search)) {
                BrowserUtilities._isEmbedded = true;
            }
            else if (navigator.userAgent.indexOf('ManagedBrowser') > -1 ||
                (SPFlight_1.default.isEnabled(60668 /* WexWebPartAudienceTargeting */) &&
                    /[?&]env=Preview/.test(location.search))) {
                BrowserUtilities._isEmbedded = false;
            }
            else {
                try {
                    var isIframeOrPhantomJS = window.parent && window.parent !== window && navigator.userAgent.indexOf('PhantomJS/') === -1;
                    BrowserUtilities._isEmbedded = isIframeOrPhantomJS || /[?&]env=Embedded/.test(location.search);
                }
                catch (e) {
                    BrowserUtilities._handleErrorForParentWindowCheck();
                }
            }
        }
        return !!BrowserUtilities._isEmbedded;
    };
    /**
     * Returns true if SharePoint site is embedded within site and not hosted e.g. in Teams.
     */
    BrowserUtilities.isEmbeddedInSite = function () {
        if (BrowserUtilities._isEmbeddedInSite === undefined) {
            BrowserUtilities._isEmbeddedInSite =
                (BrowserUtilities.isEmbedded() && !BrowserUtilities.isTeamsHosted()) ||
                    BrowserUtilities.isEmbeddedInTeamsClient();
        }
        return BrowserUtilities._isEmbeddedInSite;
    };
    BrowserUtilities.supportsServiceWorker = function () {
        return _serviceWorkerProperty in navigator;
    };
    BrowserUtilities.supportsNavigationPreload = function () {
        // ServiceWorkerRegistration is available on global window object
        return (!!window.ServiceWorkerRegistration &&
            _navigationPreloadProperty in window.ServiceWorkerRegistration.prototype);
    };
    BrowserUtilities.isOutlookWebViewHosted = function () {
        if (SPKillSwitch_1.default.isActivated('05dfabf6-5844-4295-b4f1-07adfe1700d0'
        /* '03/02/2022', 'Detect SharePoint page hosted in Outlook WebView' */
        )) {
            return false;
        }
        try {
            return /[?&]env=OutlookWebView/.test(location.search);
        }
        catch (e) {
            return false;
        }
    };
    /**
     * Check if the current browser is Safari. We have this check because
     * cookie based scenarios do not work in Safari due to ITP.
     *
     * @returns true if the current browser is Safari.
     */
    BrowserUtilities.isSafari = function () {
        if (this._isSafari === undefined) {
            // Check for 'Chrome' since Chromium browsers add 'Safari' to their user agent string
            this._isSafari =
                navigator.userAgent.indexOf('Chrome') === -1 && navigator.userAgent.indexOf('Safari') > -1;
        }
        return this._isSafari;
    };
    /**
     * Returns true if we are on the VivaHome layouts page.
     */
    BrowserUtilities.isVivaHome = function () {
        return (SPFlight_1.default.isEnabled(60840 /* VivaHome */) &&
            window.location.pathname.toLowerCase().indexOf('/_layouts/15/vivahome.aspx') !== -1);
    };
    /**
     * Returns true if we are on or navigated from the VivaHome layouts page.
     */
    BrowserUtilities.isFromVivaHome = function () {
        return (SPFlight_1.default.isEnabled(1252 /* VivaHomeIsolatedDomainCards */) &&
            (window.location.pathname.toLowerCase().indexOf('/_layouts/15/vivahome.aspx') !== -1 ||
                (!SPKillSwitch_1.default.isActivated('3d971311-4763-44a9-9e95-c3ea405d5009'
                /* '10/05/2022', 'Fix Myhub cards on Dashboard page when navigated from viva home' */
                ) &&
                    window.location.search.indexOf('isFromVivaHome=true') !== -1)));
    };
    /**
     * Returns true if SharePoint site is embedded within SharePoint which is hosted in Teams client.
     * This check is not required for Teams browser because, this api needs to be used along with isTeamsHosted,
     * which will return false for browser anyway
     */
    BrowserUtilities.isEmbeddedInTeamsClient = function () {
        if (BrowserUtilities._isEmbeddedInTeamsClient === undefined) {
            BrowserUtilities._isEmbeddedInTeamsClient = false;
            if (BrowserUtilities.isTeamsWebViewHosted()) {
                try {
                    BrowserUtilities._isEmbeddedInTeamsClient = window.name !== _teamsClientWindowName;
                }
                catch (e) {
                    /* no-op */
                }
            }
        }
        return BrowserUtilities._isEmbeddedInTeamsClient;
    };
    BrowserUtilities._isTestMobileWebView = function () {
        return /[?&]env=MobileWebView/.test(location.search);
    };
    BrowserUtilities._isMobileIntuneBrowser = function (userAgent) {
        return navigator.userAgent.indexOf('ManagedBrowser') > -1;
    };
    BrowserUtilities._handleErrorForParentWindowCheck = function () {
        //
        // Accessing window.parent x-domain throws - then window.parent !== window,
        // and we can assume we are hosted in an x-domain iframe
        //
        BrowserUtilities._isEmbedded = true;
    };
    return BrowserUtilities;
}());
exports.BrowserUtilities = BrowserUtilities;
//# sourceMappingURL=BrowserUtilities.js.map